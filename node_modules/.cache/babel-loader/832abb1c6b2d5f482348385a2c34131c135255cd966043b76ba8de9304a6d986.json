{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { reducer } from './favorites/favorites.slise';\n// ...\n\nconst reducers = combineReducers({\n  favorites: reducer\n});\nexport const store = configureStore({\n  reducer: reducers\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["combineReducers","configureStore","reducer","reducers","favorites","store"],"sources":["D:/somepr/pr/src/store/store.tsx"],"sourcesContent":["import {combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport { reducer } from './favorites/favorites.slise'\r\n// ...\r\n\r\nconst reducers = combineReducers({\r\n    favorites:reducer,\r\n    })\r\n\r\nexport const store = configureStore({\r\n  reducer: reducers\r\n\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AACjE,SAASC,OAAO,QAAQ,6BAA6B;AACrD;;AAEA,MAAMC,QAAQ,GAAGH,eAAe,CAAC;EAC7BI,SAAS,EAACF;AACV,CAAC,CAAC;AAEN,OAAO,MAAMG,KAAK,GAAGJ,cAAc,CAAC;EAClCC,OAAO,EAAEC;AAEX,CAAC,CAAC;;AAEF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}