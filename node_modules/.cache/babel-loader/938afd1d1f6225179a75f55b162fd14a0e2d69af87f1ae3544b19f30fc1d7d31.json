{"ast":null,"code":"var _jsxFileName = \"D:\\\\somepr\\\\pr\\\\src\\\\screen\\\\Home\\\\AddCakeForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./AddCakeForm.module.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddCakeForm({\n  setCake\n}) {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onChange'\n  });\n  const [data, setData] = useState(null);\n  const createCake = data => {\n    setCake(prev => [{\n      id: prev.length + 1,\n      name: data.name,\n      price: data.price,\n      // Преобразовать строку в число\n      image: data.image\n    }, ...prev]);\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit(createCake),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      ...register('name', {\n        required: 'Name is required'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Price\",\n      ...register('price', {\n        required: 'Name is required'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Image\",\n      ...register('image', {\n        required: 'Name is required'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(AddCakeForm, \"6mcLudj0v5LqI2lKX+l58ACGzdg=\", false, function () {\n  return [useForm];\n});\n_c = AddCakeForm;\nexport default AddCakeForm;\nvar _c;\n$RefreshReg$(_c, \"AddCakeForm\");","map":{"version":3,"names":["React","useState","styles","useForm","jsxDEV","_jsxDEV","AddCakeForm","setCake","_s","register","handleSubmit","reset","formState","errors","mode","data","setData","createCake","prev","id","length","name","price","image","className","form","onSubmit","children","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/somepr/pr/src/screen/Home/AddCakeForm.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {ICake} from \"../../assets/types/cake.interface\";\r\nimport {inspect} from \"util\";\r\nimport styles from \"./AddCakeForm.module.css\"\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nfunction AddCakeForm({setCake}:{setCake: (newCakes: (prev: ICake[]) => ICake[]) => void}) {\r\n\r\n    const {register,handleSubmit,reset, formState: {errors}} = useForm<ICake>({\r\n        mode: 'onChange'\r\n    })\r\n    const [data,setData] = useState<ICake | null>(null)\r\n\r\n\r\n    const createCake = (data:ICake) => {\r\n            setCake((prev:ICake[]) => [\r\n                {\r\n                    id: prev.length + 1,\r\n                    name: data.name,\r\n                    price: data.price, // Преобразовать строку в число\r\n                    image: data.image,\r\n                },\r\n                ...prev\r\n            ]);\r\n        reset()\r\n    }\r\n    return(\r\n        <form className={styles.form} onSubmit={handleSubmit(createCake)}>\r\n                <input placeholder='Name'\r\n                       {...register('name',{required: 'Name is required'})}\r\n                />\r\n                <input placeholder='Price'\r\n                       {...register('price',{required: 'Name is required'})}\r\n                />\r\n                <input placeholder='Image'\r\n                       {...register('image',{required: 'Name is required'})}\r\n                />\r\n            <button>Create</button>\r\n        </form>\r\n    )\r\n}\r\nexport default AddCakeForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAGrC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAAQC,OAAO,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAACC;AAAiE,CAAC,EAAE;EAAAC,EAAA;EAEtF,MAAM;IAACC,QAAQ;IAACC,YAAY;IAACC,KAAK;IAAEC,SAAS,EAAE;MAACC;IAAM;EAAC,CAAC,GAAGV,OAAO,CAAQ;IACtEW,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGf,QAAQ,CAAe,IAAI,CAAC;EAGnD,MAAMgB,UAAU,GAAIF,IAAU,IAAK;IAC3BR,OAAO,CAAEW,IAAY,IAAK,CACtB;MACIC,EAAE,EAAED,IAAI,CAACE,MAAM,GAAG,CAAC;MACnBC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,KAAK,EAAEP,IAAI,CAACO,KAAK;MAAE;MACnBC,KAAK,EAAER,IAAI,CAACQ;IAChB,CAAC,EACD,GAAGL,IAAI,CACV,CAAC;IACNP,KAAK,CAAC,CAAC;EACX,CAAC;EACD,oBACIN,OAAA;IAAMmB,SAAS,EAAEtB,MAAM,CAACuB,IAAK;IAACC,QAAQ,EAAEhB,YAAY,CAACO,UAAU,CAAE;IAAAU,QAAA,gBACzDtB,OAAA;MAAOuB,WAAW,EAAC,MAAM;MAAA,GACdnB,QAAQ,CAAC,MAAM,EAAC;QAACoB,QAAQ,EAAE;MAAkB,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACF5B,OAAA;MAAOuB,WAAW,EAAC,OAAO;MAAA,GACfnB,QAAQ,CAAC,OAAO,EAAC;QAACoB,QAAQ,EAAE;MAAkB,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACF5B,OAAA;MAAOuB,WAAW,EAAC,OAAO;MAAA,GACfnB,QAAQ,CAAC,OAAO,EAAC;QAACoB,QAAQ,EAAE;MAAkB,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACN5B,OAAA;MAAAsB,QAAA,EAAQ;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEf;AAACzB,EAAA,CAlCQF,WAAW;EAAA,QAE2CH,OAAO;AAAA;AAAA+B,EAAA,GAF7D5B,WAAW;AAmCpB,eAAeA,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}